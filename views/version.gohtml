{{define "content"}}
<style>
    .version-card {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin-bottom: 15px;
        transition: box-shadow 0.3s ease;
    }
    .version-card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .version-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
        padding: 15px;
        border-radius: 8px 8px 0 0;
    }
    .version-body {
        padding: 15px;
    }
    .current-version {
        border-left: 4px solid #28a745;
    }
    .latest-version {
        border-left: 4px solid #007bff;
    }
    .update-available {
        border-left: 4px solid #ffc107;
    }
    .badge-current {
        background-color: #28a745;
    }
    .badge-latest {
        background-color: #007bff;
    }
    .badge-update {
        background-color: #ffc107;
        color: #000;
    }
    .disabled-feature {
        opacity: 0.6;
        pointer-events: none;
    }
    .service-only {
        background-color: #fff3cd;
        border: 1px solid #ffeaa7;
        border-radius: 4px;
        padding: 10px;
        margin: 10px 0;
    }
</style>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="bi bi-arrow-clockwise"></i> 版本管理</h2>
                <div>
                    <button type="button" class="btn btn-outline-primary me-2" onclick="checkForUpdates()">
                        <i class="bi bi-search"></i> 检查更新
                    </button>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateSettingsModal">
                        <i class="bi bi-gear"></i> 更新设置
                    </button>
                </div>
            </div>

            <!-- 运行模式提示 -->
            {{if not .IsServiceMode}}
            <div class="alert alert-info mb-4" role="alert">
                <i class="bi bi-info-circle"></i>
                <strong>命令模式:</strong> 更新完成后需要手动重启程序以应用新版本。
            </div>
            {{else}}
            <div class="alert alert-success mb-4" role="alert">
                <i class="bi bi-check-circle"></i>
                <strong>服务模式:</strong> 更新完成后将自动重启服务。
            </div>
            {{end}}

            <!-- 自动更新状态 -->
            <div class="alert {{if .AutoUpdateEnabled}}alert-success{{else}}alert-warning{{end}} mb-4" role="alert">
                <i class="bi bi-info-circle"></i>
                自动更新状态: 
                <strong>{{if .AutoUpdateEnabled}}已启用{{else}}已禁用{{end}}</strong>
                {{if .AutoUpdateEnabled}}
                <span class="ms-2">检查间隔: {{.CheckInterval}}分钟</span>
                {{end}}
            </div>

            <!-- 当前版本信息 -->
            <div class="version-card current-version">
                <div class="version-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="bi bi-bookmark-check"></i> 当前版本
                            <span class="badge badge-current ms-2">{{.CurrentVersion}}</span>
                        </h5>
                        <div>
                            <small class="text-muted">SHA256: </small>
                            <code class="text-muted">{{if .CurrentChecksum}}{{.CurrentChecksum}}{{else}}计算中...{{end}}</code>
                        </div>
                    </div>
                </div>
                <div class="version-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>安装时间:</strong> {{if .InstallTime}}{{.InstallTime}}{{else}}未知{{end}}</p>
                            <p><strong>文件大小:</strong> {{if .CurrentFileSize}}{{.CurrentFileSize}}{{else}}未知{{end}}</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>平台:</strong> {{.Platform}}</p>
                            <p><strong>架构:</strong> {{.Architecture}}</p>
                            <p><strong>运行模式:</strong> {{if .IsServiceMode}}服务模式{{else}}命令模式{{end}}</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 最新版本信息 -->
            {{if .LatestRelease}}
            <div class="version-card {{if .HasUpdate}}update-available{{else}}latest-version{{end}}">
                <div class="version-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="bi bi-tag"></i> 最新版本
                            <span class="badge {{if .HasUpdate}}badge-update{{else}}badge-latest{{end}} ms-2">
                                {{.LatestRelease.TagName}}
                            </span>
                            {{if .HasUpdate}}
                            <span class="badge bg-success ms-1">可更新</span>
                            {{else}}
                            <span class="badge bg-info ms-1">已是最新</span>
                            {{end}}
                        </h5>
                        <div>
                            <small class="text-muted">发布于: {{.LatestRelease.PublishedAt}}</small>
                        </div>
                    </div>
                </div>
                <div class="version-body">
                    {{if .LatestRelease.Body}}
                    <div class="mb-3">
                        <strong>发布说明:</strong>
                        <div class="mt-2 p-2 bg-light border rounded">{{.LatestRelease.Body}}</div>
                    </div>
                    {{end}}
                    
                    {{if .LatestRelease.MatchingAsset}}
                    <div class="d-flex justify-content-between align-items-center border rounded p-3 bg-light">
                        <div>
                            <strong>{{.LatestRelease.MatchingAsset.Name}}</strong>
                            <br>
                            <small class="text-muted">大小: {{.LatestRelease.MatchingAsset.Size}} | 下载次数: {{.LatestRelease.MatchingAsset.DownloadCount}}</small>
                        </div>
                        <div>                            <button type="button" class="btn btn-outline-success me-2" 
                                    onclick="downloadRelease('{{.LatestRelease.TagName}}', '{{.LatestRelease.MatchingAsset.Name}}', '{{.LatestRelease.MatchingAsset.DownloadURL}}')">
                                <i class="bi bi-download"></i> 下载
                            </button>
                            {{if .HasUpdate}}
                            <button type="button" class="btn btn-warning" 
                                    onclick="updateToVersion('{{.LatestRelease.TagName}}', '{{.LatestRelease.MatchingAsset.Name}}', '{{.LatestRelease.MatchingAsset.DownloadURL}}')">
                                <i class="bi bi-arrow-up"></i> {{if .IsServiceMode}}更新{{else}}更新 (需手动重启){{end}}
                            </button>
                            {{end}}
                        </div>
                    </div>
                    {{else}}
                    <div class="alert alert-warning" role="alert">
                        <i class="bi bi-exclamation-triangle"></i>
                        未找到适合当前平台 ({{.Platform}}/{{.Architecture}}) 的安装包
                    </div>
                    {{end}}
                </div>
            </div>
            {{else}}            <div class="alert alert-info" role="alert">
                <i class="bi bi-info-circle"></i>
                <strong>正在获取版本信息...</strong> 请稍等或检查网络连接和GitHub仓库配置。
            </div>
            {{end}}        </div>
    </div>
</div>

<!-- 更新设置模态框 -->
<div class="modal fade" id="updateSettingsModal" tabindex="-1" aria-labelledby="updateSettingsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateSettingsModalLabel">更新设置</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateSettingsForm">
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="autoUpdateEnabled" 
                                   {{if .AutoUpdateEnabled}}checked{{end}}>
                            <label class="form-check-label" for="autoUpdateEnabled">
                                启用自动更新检查
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="checkInterval" class="form-label">检查间隔 (分钟)</label>
                        <input type="number" class="form-control" id="checkInterval" 
                               value="{{.CheckIntervalMinutes}}" min="5" max="1440">
                        <div class="form-text">设置自动检查更新的时间间隔，范围: 5-1440分钟</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="githubOwner" class="form-label">GitHub 仓库所有者</label>
                        <input type="text" class="form-control" id="githubOwner" value="{{.GitHubOwner}}">
                    </div>
                      <div class="mb-3">
                        <label for="githubRepo" class="form-label">GitHub 仓库名称</label>
                        <input type="text" class="form-control" id="githubRepo" value="{{.GitHubRepo}}">
                    </div>
                    
                    <hr>
                    <h6>下载代理设置</h6>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="proxyEnabled" 
                                   {{if .ProxyEnabled}}checked{{end}}>
                            <label class="form-check-label" for="proxyEnabled">
                                启用下载代理
                            </label>
                        </div>
                    </div>
                    
                    <div class="mb-3" id="proxySettings" {{if not .ProxyEnabled}}style="display: none;"{{end}}>
                        <label for="proxyUrl" class="form-label">代理地址</label>
                        <input type="text" class="form-control" id="proxyUrl" value="{{.ProxyURL}}" 
                               placeholder="http://proxy.example.com:8080">
                        <div class="form-text">格式: http://host:port 或 https://host:port</div>
                    </div>
                    
                    <div class="mb-3" id="proxyAuth" {{if not .ProxyEnabled}}style="display: none;"{{end}}>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="proxyUsername" class="form-label">用户名 (可选)</label>
                                <input type="text" class="form-control" id="proxyUsername" value="{{.ProxyUsername}}">
                            </div>
                            <div class="col-md-6">
                                <label for="proxyPassword" class="form-label">密码 (可选)</label>
                                <input type="password" class="form-control" id="proxyPassword" value="{{.ProxyPassword}}">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" onclick="saveUpdateSettings()">保存设置</button>
            </div>        </div>
    </div>
</div>

<!-- 进度模态框 -->
<div class="modal fade" id="progressModal" tabindex="-1" aria-labelledby="progressModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="progressModalLabel">处理中...</h5>
            </div>
            <div class="modal-body">
                <div class="progress mb-3">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" 
                         role="progressbar" style="width: 0%" id="progressBar"></div>
                </div>
                <div id="progressText">正在处理，请稍候...</div>
                <div id="progressDetails" style="display: none;" class="mt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">文件名:</small>
                            <div id="downloadFileName">-</div>
                        </div>
                        <div class="col-md-6">
                            <small class="text-muted">下载进度:</small>
                            <div id="downloadSize">-</div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-6">
                            <small class="text-muted">下载速度:</small>
                            <div id="downloadSpeed">-</div>
                        </div>
                        <div class="col-md-6">
                            <small class="text-muted">剩余时间:</small>
                            <div id="downloadETA">-</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>    function checkForUpdates() {
        showProgress('检查更新中...', 50);
        
        $.ajax({
            url: '/api/version/check',
            method: 'POST',
            success: function(response) {
                hideProgress();
                if (response.hasUpdate) {
                    alert('发现新版本: ' + response.latestVersion);
                    location.reload();
                } else {
                    alert('当前已是最新版本');
                }
            },
            error: function(xhr, status, error) {
                hideProgress();
                alert('检查更新失败: ' + error);
            }
        });
    }    function downloadRelease(version, fileName, downloadUrl) {
        showProgress('准备下载: ' + fileName, 0);
        showProgressDetails();
        $('#downloadFileName').text(fileName);
        
        $.ajax({
            url: '/api/version/download',
            method: 'POST',
            data: {
                version: version,
                fileName: fileName,
                downloadUrl: downloadUrl
            },
            success: function(response) {
                if (response.success && response.downloadId) {
                    // 开始监控下载进度
                    monitorDownloadProgress(response.downloadId, fileName);
                } else {
                    hideProgress();
                    alert('下载启动失败: ' + (response.error || '未知错误'));
                }
            },
            error: function(xhr, status, error) {
                hideProgress();
                alert('下载失败: ' + error);
            }
        });
    }    function updateToVersion(version, fileName, downloadUrl) {
        var confirmMessage = '确定要更新到版本 ' + version + ' 吗？\n\n';
        {{if .IsServiceMode}}
        confirmMessage += '注意：更新过程中服务将会自动重启。';
        {{else}}
        confirmMessage += '注意：Windows系统下将启动更新脚本，程序会自动退出。\n请按照脚本提示完成更新过程。';
        {{end}}
        
        if (!confirm(confirmMessage)) {
            return;
        }
        
        showProgress('准备更新到版本 ' + version, 20);
        
        $.ajax({
            url: '/api/version/update',
            method: 'POST',
            data: {
                version: version,
                fileName: fileName,
                downloadUrl: downloadUrl
            },
            success: function(response) {
                if (response.success) {
                    {{if .IsServiceMode}}
                    updateProgress(80, '更新脚本已启动，即将重启服务...');
                    setTimeout(function() {
                        updateProgress(100, '服务重启中，请稍候...');
                        setTimeout(function() {
                            // 尝试重新连接，如果失败说明服务正在重启
                            checkServerStatus();
                        }, 5000);
                    }, 1000);
                    {{else}}
                    updateProgress(100, '更新脚本已启动，程序即将退出');
                    setTimeout(function() {
                        hideProgress();
                        alert('更新脚本已启动！\n\n程序即将退出，请按照批处理窗口的提示完成更新。\n更新完成后，请手动重启程序。');
                    }, 1000);
                    {{end}}
                } else {
                    hideProgress();
                    alert('更新失败: ' + response.error);
                }
            },
            error: function(xhr, status, error) {
                hideProgress();
                alert('更新失败: ' + error);
            }        });
    }

    function saveUpdateSettings() {
        const settings = {
            enabled: $('#autoUpdateEnabled').is(':checked'),
            checkInterval: parseInt($('#checkInterval').val()),
            githubOwner: $('#githubOwner').val(),
            githubRepo: $('#githubRepo').val(),
            proxyEnabled: $('#proxyEnabled').is(':checked'),
            proxyUrl: $('#proxyUrl').val(),
            proxyUsername: $('#proxyUsername').val(),
            proxyPassword: $('#proxyPassword').val()
        };
        
        $.ajax({
            url: '/api/version/settings',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(settings),
            success: function(response) {
                if (response.success) {
                    alert('设置保存成功');
                    $('#updateSettingsModal').modal('hide');
                    location.reload();
                } else {
                    alert('设置保存失败: ' + response.error);
                }
            },
            error: function(xhr, status, error) {
                alert('设置保存失败: ' + error);
            }
        });
    }

    function showProgress(text, percent) {
        $('#progressText').text(text);
        $('#progressBar').css('width', percent + '%');
        $('#progressModal').modal('show');
    }

    function updateProgress(percent, text) {
        $('#progressBar').css('width', percent + '%');
        if (text) {
            $('#progressText').text(text);
        }
    }

    function hideProgress() {
        $('#progressModal').modal('hide');
    }

    // 监控下载进度
    function monitorDownloadProgress(downloadId, fileName) {
        var startTime = Date.now();
        var lastDownloaded = 0;
        var lastTime = Date.now();
        
        var progressInterval = setInterval(function() {
            $.ajax({
                url: '/api/version/progress?id=' + downloadId,
                method: 'GET',
                success: function(response) {
                    if (response.success) {
                        var progress = response.progress || 0;
                        var downloaded = response.downloadedSize || 0;
                        var total = response.totalSize || 0;
                        var status = response.status || 'downloading';
                        
                        // 更新进度条
                        updateProgress(progress, '下载中: ' + fileName + ' (' + progress.toFixed(1) + '%)');
                        
                        // 更新详细信息
                        $('#downloadSize').text(formatBytes(downloaded) + ' / ' + formatBytes(total));
                        
                        // 计算下载速度
                        var currentTime = Date.now();
                        var timeDiff = (currentTime - lastTime) / 1000; // 秒
                        var bytesDiff = downloaded - lastDownloaded;
                        
                        if (timeDiff > 0) {
                            var speed = bytesDiff / timeDiff; // bytes per second
                            $('#downloadSpeed').text(formatBytes(speed) + '/s');
                            
                            // 计算剩余时间
                            if (speed > 0 && total > 0) {
                                var remaining = (total - downloaded) / speed; // 秒
                                $('#downloadETA').text(formatTime(remaining));
                            }
                        }
                        
                        lastDownloaded = downloaded;
                        lastTime = currentTime;
                        
                        // 检查状态
                        if (status === 'completed') {
                            clearInterval(progressInterval);
                            updateProgress(100, '下载完成: ' + fileName);
                            setTimeout(function() {
                                hideProgress();
                                alert('下载完成！');
                            }, 1000);
                        } else if (status === 'error') {
                            clearInterval(progressInterval);
                            hideProgress();
                            alert('下载失败: ' + (response.error || '未知错误'));
                        }
                    }
                },
                error: function() {
                    clearInterval(progressInterval);
                    hideProgress();
                    alert('无法获取下载进度');
                }
            });
        }, 1000); // 每秒更新一次
    }
    
    // 格式化字节数
    function formatBytes(bytes) {
        if (bytes === 0) return '0 B';
        var k = 1024;
        var sizes = ['B', 'KB', 'MB', 'GB'];
        var i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
    
    // 格式化时间
    function formatTime(seconds) {
        if (seconds < 60) return Math.round(seconds) + '秒';
        var minutes = Math.floor(seconds / 60);
        if (minutes < 60) return minutes + '分' + Math.round(seconds % 60) + '秒';
        var hours = Math.floor(minutes / 60);
        return hours + '时' + (minutes % 60) + '分';
    }
    
    // 显示进度详情
    function showProgressDetails() {
        $('#progressDetails').show();
    }
    
    // 隐藏进度详情
    function hideProgressDetails() {
        $('#progressDetails').hide();
    }
    
    // 代理设置切换
    $('#proxyEnabled').change(function() {
        if ($(this).is(':checked')) {
            $('#proxySettings, #proxyAuth').show();
        } else {
            $('#proxySettings, #proxyAuth').hide();
        }
    });
    
    // 检查服务器状态（用于服务重启后的重连）
    function checkServerStatus() {
        var attempts = 0;
        var maxAttempts = 30; // 最多尝试30次，约5分钟
        
        function attempt() {
            attempts++;
            $.ajax({
                url: '/api/version/check',
                method: 'POST',
                timeout: 3000,
                success: function() {
                    hideProgress();
                    alert('服务已成功重启！页面即将刷新。');
                    setTimeout(function() {
                        location.reload();
                    }, 1000);
                },
                error: function() {
                    if (attempts < maxAttempts) {
                        updateProgress(100, '等待服务重启... (' + attempts + '/' + maxAttempts + ')');
                        setTimeout(attempt, 10000); // 10秒后重试
                    } else {
                        hideProgress();
                        alert('服务重启超时，请手动刷新页面检查状态。');
                    }
                }
            });
        }
          // 开始检查
        setTimeout(attempt, 10000); // 10秒后开始第一次检查
    }
</script>
{{end}}
